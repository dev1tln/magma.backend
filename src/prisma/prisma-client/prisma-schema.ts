// Code generated by Prisma (prisma@1.34.8). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

export const typeDefs = /* GraphQL */ `type AggregateArticle {
  count: Int!
}

type AggregateDetention {
  count: Int!
}

type AggregateInventaire {
  count: Int!
}

type AggregateUnite {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type Article {
  id: ID!
  createdAt: DateTime
  numref: String!
  nno: String!
  lib: String!
  untcpt: Int
  untprx: Float
  cdeapr: String
  srvpou: String
  typart: String
  numser: String
  pictureUrl: String
  detention: Detention
}

type ArticleConnection {
  pageInfo: PageInfo!
  edges: [ArticleEdge]!
  aggregate: AggregateArticle!
}

input ArticleCreateInput {
  id: ID
  numref: String!
  nno: String!
  lib: String!
  untcpt: Int
  untprx: Float
  cdeapr: String
  srvpou: String
  typart: String
  numser: String
  pictureUrl: String
  detention: DetentionCreateOneInput
}

type ArticleEdge {
  node: Article!
  cursor: String!
}

type ArticleEmbedded {
  article_id: ID!
  nno: String!
  numref: String!
  lib: String!
  untcpt: Int
  untprx: Float
  cdeapr: String
  srvpou: String
  typart: String
  numser: String
  pictureUrl: String
  detention: Detention
}

input ArticleEmbeddedCreateInput {
  article_id: ID!
  nno: String!
  numref: String!
  lib: String!
  untcpt: Int
  untprx: Float
  cdeapr: String
  srvpou: String
  typart: String
  numser: String
  pictureUrl: String
  detention: DetentionCreateOneInput
}

input ArticleEmbeddedCreateManyInput {
  create: [ArticleEmbeddedCreateInput!]
}

input ArticleEmbeddedRestrictedWhereInput {
  article_id: ID
  article_id_not: ID
  article_id_in: [ID!]
  article_id_not_in: [ID!]
  article_id_lt: ID
  article_id_lte: ID
  article_id_gt: ID
  article_id_gte: ID
  article_id_contains: ID
  article_id_not_contains: ID
  article_id_starts_with: ID
  article_id_not_starts_with: ID
  article_id_ends_with: ID
  article_id_not_ends_with: ID
  nno: String
  nno_not: String
  nno_in: [String!]
  nno_not_in: [String!]
  nno_lt: String
  nno_lte: String
  nno_gt: String
  nno_gte: String
  nno_contains: String
  nno_not_contains: String
  nno_starts_with: String
  nno_not_starts_with: String
  nno_ends_with: String
  nno_not_ends_with: String
  numref: String
  numref_not: String
  numref_in: [String!]
  numref_not_in: [String!]
  numref_lt: String
  numref_lte: String
  numref_gt: String
  numref_gte: String
  numref_contains: String
  numref_not_contains: String
  numref_starts_with: String
  numref_not_starts_with: String
  numref_ends_with: String
  numref_not_ends_with: String
  lib: String
  lib_not: String
  lib_in: [String!]
  lib_not_in: [String!]
  lib_lt: String
  lib_lte: String
  lib_gt: String
  lib_gte: String
  lib_contains: String
  lib_not_contains: String
  lib_starts_with: String
  lib_not_starts_with: String
  lib_ends_with: String
  lib_not_ends_with: String
  untcpt: Int
  untcpt_not: Int
  untcpt_in: [Int!]
  untcpt_not_in: [Int!]
  untcpt_lt: Int
  untcpt_lte: Int
  untcpt_gt: Int
  untcpt_gte: Int
  untprx: Float
  untprx_not: Float
  untprx_in: [Float!]
  untprx_not_in: [Float!]
  untprx_lt: Float
  untprx_lte: Float
  untprx_gt: Float
  untprx_gte: Float
  cdeapr: String
  cdeapr_not: String
  cdeapr_in: [String!]
  cdeapr_not_in: [String!]
  cdeapr_lt: String
  cdeapr_lte: String
  cdeapr_gt: String
  cdeapr_gte: String
  cdeapr_contains: String
  cdeapr_not_contains: String
  cdeapr_starts_with: String
  cdeapr_not_starts_with: String
  cdeapr_ends_with: String
  cdeapr_not_ends_with: String
  srvpou: String
  srvpou_not: String
  srvpou_in: [String!]
  srvpou_not_in: [String!]
  srvpou_lt: String
  srvpou_lte: String
  srvpou_gt: String
  srvpou_gte: String
  srvpou_contains: String
  srvpou_not_contains: String
  srvpou_starts_with: String
  srvpou_not_starts_with: String
  srvpou_ends_with: String
  srvpou_not_ends_with: String
  typart: String
  typart_not: String
  typart_in: [String!]
  typart_not_in: [String!]
  typart_lt: String
  typart_lte: String
  typart_gt: String
  typart_gte: String
  typart_contains: String
  typart_not_contains: String
  typart_starts_with: String
  typart_not_starts_with: String
  typart_ends_with: String
  typart_not_ends_with: String
  numser: String
  numser_not: String
  numser_in: [String!]
  numser_not_in: [String!]
  numser_lt: String
  numser_lte: String
  numser_gt: String
  numser_gte: String
  numser_contains: String
  numser_not_contains: String
  numser_starts_with: String
  numser_not_starts_with: String
  numser_ends_with: String
  numser_not_ends_with: String
  pictureUrl: String
  pictureUrl_not: String
  pictureUrl_in: [String!]
  pictureUrl_not_in: [String!]
  pictureUrl_lt: String
  pictureUrl_lte: String
  pictureUrl_gt: String
  pictureUrl_gte: String
  pictureUrl_contains: String
  pictureUrl_not_contains: String
  pictureUrl_starts_with: String
  pictureUrl_not_starts_with: String
  pictureUrl_ends_with: String
  pictureUrl_not_ends_with: String
  AND: [ArticleEmbeddedRestrictedWhereInput!]
}

input ArticleEmbeddedScalarWhereInput {
  article_id: ID
  article_id_not: ID
  article_id_in: [ID!]
  article_id_not_in: [ID!]
  article_id_lt: ID
  article_id_lte: ID
  article_id_gt: ID
  article_id_gte: ID
  article_id_contains: ID
  article_id_not_contains: ID
  article_id_starts_with: ID
  article_id_not_starts_with: ID
  article_id_ends_with: ID
  article_id_not_ends_with: ID
  nno: String
  nno_not: String
  nno_in: [String!]
  nno_not_in: [String!]
  nno_lt: String
  nno_lte: String
  nno_gt: String
  nno_gte: String
  nno_contains: String
  nno_not_contains: String
  nno_starts_with: String
  nno_not_starts_with: String
  nno_ends_with: String
  nno_not_ends_with: String
  numref: String
  numref_not: String
  numref_in: [String!]
  numref_not_in: [String!]
  numref_lt: String
  numref_lte: String
  numref_gt: String
  numref_gte: String
  numref_contains: String
  numref_not_contains: String
  numref_starts_with: String
  numref_not_starts_with: String
  numref_ends_with: String
  numref_not_ends_with: String
  lib: String
  lib_not: String
  lib_in: [String!]
  lib_not_in: [String!]
  lib_lt: String
  lib_lte: String
  lib_gt: String
  lib_gte: String
  lib_contains: String
  lib_not_contains: String
  lib_starts_with: String
  lib_not_starts_with: String
  lib_ends_with: String
  lib_not_ends_with: String
  untcpt: Int
  untcpt_not: Int
  untcpt_in: [Int!]
  untcpt_not_in: [Int!]
  untcpt_lt: Int
  untcpt_lte: Int
  untcpt_gt: Int
  untcpt_gte: Int
  untprx: Float
  untprx_not: Float
  untprx_in: [Float!]
  untprx_not_in: [Float!]
  untprx_lt: Float
  untprx_lte: Float
  untprx_gt: Float
  untprx_gte: Float
  cdeapr: String
  cdeapr_not: String
  cdeapr_in: [String!]
  cdeapr_not_in: [String!]
  cdeapr_lt: String
  cdeapr_lte: String
  cdeapr_gt: String
  cdeapr_gte: String
  cdeapr_contains: String
  cdeapr_not_contains: String
  cdeapr_starts_with: String
  cdeapr_not_starts_with: String
  cdeapr_ends_with: String
  cdeapr_not_ends_with: String
  srvpou: String
  srvpou_not: String
  srvpou_in: [String!]
  srvpou_not_in: [String!]
  srvpou_lt: String
  srvpou_lte: String
  srvpou_gt: String
  srvpou_gte: String
  srvpou_contains: String
  srvpou_not_contains: String
  srvpou_starts_with: String
  srvpou_not_starts_with: String
  srvpou_ends_with: String
  srvpou_not_ends_with: String
  typart: String
  typart_not: String
  typart_in: [String!]
  typart_not_in: [String!]
  typart_lt: String
  typart_lte: String
  typart_gt: String
  typart_gte: String
  typart_contains: String
  typart_not_contains: String
  typart_starts_with: String
  typart_not_starts_with: String
  typart_ends_with: String
  typart_not_ends_with: String
  numser: String
  numser_not: String
  numser_in: [String!]
  numser_not_in: [String!]
  numser_lt: String
  numser_lte: String
  numser_gt: String
  numser_gte: String
  numser_contains: String
  numser_not_contains: String
  numser_starts_with: String
  numser_not_starts_with: String
  numser_ends_with: String
  numser_not_ends_with: String
  pictureUrl: String
  pictureUrl_not: String
  pictureUrl_in: [String!]
  pictureUrl_not_in: [String!]
  pictureUrl_lt: String
  pictureUrl_lte: String
  pictureUrl_gt: String
  pictureUrl_gte: String
  pictureUrl_contains: String
  pictureUrl_not_contains: String
  pictureUrl_starts_with: String
  pictureUrl_not_starts_with: String
  pictureUrl_ends_with: String
  pictureUrl_not_ends_with: String
  AND: [ArticleEmbeddedScalarWhereInput!]
  OR: [ArticleEmbeddedScalarWhereInput!]
  NOT: [ArticleEmbeddedScalarWhereInput!]
}

input ArticleEmbeddedUpdateManyDataInput {
  article_id: ID
  nno: String
  numref: String
  lib: String
  untcpt: Int
  untprx: Float
  cdeapr: String
  srvpou: String
  typart: String
  numser: String
  pictureUrl: String
}

input ArticleEmbeddedUpdateManyInput {
  create: [ArticleEmbeddedCreateInput!]
  deleteMany: [ArticleEmbeddedScalarWhereInput!]
  updateMany: [ArticleEmbeddedUpdateManyWithWhereNestedInput!]
}

input ArticleEmbeddedUpdateManyWithWhereNestedInput {
  where: ArticleEmbeddedScalarWhereInput!
  data: ArticleEmbeddedUpdateManyDataInput!
}

input ArticleEmbeddedWhereInput {
  article_id: ID
  article_id_not: ID
  article_id_in: [ID!]
  article_id_not_in: [ID!]
  article_id_lt: ID
  article_id_lte: ID
  article_id_gt: ID
  article_id_gte: ID
  article_id_contains: ID
  article_id_not_contains: ID
  article_id_starts_with: ID
  article_id_not_starts_with: ID
  article_id_ends_with: ID
  article_id_not_ends_with: ID
  nno: String
  nno_not: String
  nno_in: [String!]
  nno_not_in: [String!]
  nno_lt: String
  nno_lte: String
  nno_gt: String
  nno_gte: String
  nno_contains: String
  nno_not_contains: String
  nno_starts_with: String
  nno_not_starts_with: String
  nno_ends_with: String
  nno_not_ends_with: String
  numref: String
  numref_not: String
  numref_in: [String!]
  numref_not_in: [String!]
  numref_lt: String
  numref_lte: String
  numref_gt: String
  numref_gte: String
  numref_contains: String
  numref_not_contains: String
  numref_starts_with: String
  numref_not_starts_with: String
  numref_ends_with: String
  numref_not_ends_with: String
  lib: String
  lib_not: String
  lib_in: [String!]
  lib_not_in: [String!]
  lib_lt: String
  lib_lte: String
  lib_gt: String
  lib_gte: String
  lib_contains: String
  lib_not_contains: String
  lib_starts_with: String
  lib_not_starts_with: String
  lib_ends_with: String
  lib_not_ends_with: String
  untcpt: Int
  untcpt_not: Int
  untcpt_in: [Int!]
  untcpt_not_in: [Int!]
  untcpt_lt: Int
  untcpt_lte: Int
  untcpt_gt: Int
  untcpt_gte: Int
  untprx: Float
  untprx_not: Float
  untprx_in: [Float!]
  untprx_not_in: [Float!]
  untprx_lt: Float
  untprx_lte: Float
  untprx_gt: Float
  untprx_gte: Float
  cdeapr: String
  cdeapr_not: String
  cdeapr_in: [String!]
  cdeapr_not_in: [String!]
  cdeapr_lt: String
  cdeapr_lte: String
  cdeapr_gt: String
  cdeapr_gte: String
  cdeapr_contains: String
  cdeapr_not_contains: String
  cdeapr_starts_with: String
  cdeapr_not_starts_with: String
  cdeapr_ends_with: String
  cdeapr_not_ends_with: String
  srvpou: String
  srvpou_not: String
  srvpou_in: [String!]
  srvpou_not_in: [String!]
  srvpou_lt: String
  srvpou_lte: String
  srvpou_gt: String
  srvpou_gte: String
  srvpou_contains: String
  srvpou_not_contains: String
  srvpou_starts_with: String
  srvpou_not_starts_with: String
  srvpou_ends_with: String
  srvpou_not_ends_with: String
  typart: String
  typart_not: String
  typart_in: [String!]
  typart_not_in: [String!]
  typart_lt: String
  typart_lte: String
  typart_gt: String
  typart_gte: String
  typart_contains: String
  typart_not_contains: String
  typart_starts_with: String
  typart_not_starts_with: String
  typart_ends_with: String
  typart_not_ends_with: String
  numser: String
  numser_not: String
  numser_in: [String!]
  numser_not_in: [String!]
  numser_lt: String
  numser_lte: String
  numser_gt: String
  numser_gte: String
  numser_contains: String
  numser_not_contains: String
  numser_starts_with: String
  numser_not_starts_with: String
  numser_ends_with: String
  numser_not_ends_with: String
  pictureUrl: String
  pictureUrl_not: String
  pictureUrl_in: [String!]
  pictureUrl_not_in: [String!]
  pictureUrl_lt: String
  pictureUrl_lte: String
  pictureUrl_gt: String
  pictureUrl_gte: String
  pictureUrl_contains: String
  pictureUrl_not_contains: String
  pictureUrl_starts_with: String
  pictureUrl_not_starts_with: String
  pictureUrl_ends_with: String
  pictureUrl_not_ends_with: String
  detention: DetentionWhereInput
  AND: [ArticleEmbeddedWhereInput!]
}

enum ArticleOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  numref_ASC
  numref_DESC
  nno_ASC
  nno_DESC
  lib_ASC
  lib_DESC
  untcpt_ASC
  untcpt_DESC
  untprx_ASC
  untprx_DESC
  cdeapr_ASC
  cdeapr_DESC
  srvpou_ASC
  srvpou_DESC
  typart_ASC
  typart_DESC
  numser_ASC
  numser_DESC
  pictureUrl_ASC
  pictureUrl_DESC
}

type ArticlePreviousValues {
  id: ID!
  createdAt: DateTime
  numref: String!
  nno: String!
  lib: String!
  untcpt: Int
  untprx: Float
  cdeapr: String
  srvpou: String
  typart: String
  numser: String
  pictureUrl: String
}

type ArticleSubscriptionPayload {
  mutation: MutationType!
  node: Article
  updatedFields: [String!]
  previousValues: ArticlePreviousValues
}

input ArticleSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ArticleWhereInput
  AND: [ArticleSubscriptionWhereInput!]
}

input ArticleUpdateInput {
  numref: String
  nno: String
  lib: String
  untcpt: Int
  untprx: Float
  cdeapr: String
  srvpou: String
  typart: String
  numser: String
  pictureUrl: String
  detention: DetentionUpdateOneInput
}

input ArticleUpdateManyMutationInput {
  numref: String
  nno: String
  lib: String
  untcpt: Int
  untprx: Float
  cdeapr: String
  srvpou: String
  typart: String
  numser: String
  pictureUrl: String
}

input ArticleWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  numref: String
  numref_not: String
  numref_in: [String!]
  numref_not_in: [String!]
  numref_lt: String
  numref_lte: String
  numref_gt: String
  numref_gte: String
  numref_contains: String
  numref_not_contains: String
  numref_starts_with: String
  numref_not_starts_with: String
  numref_ends_with: String
  numref_not_ends_with: String
  nno: String
  nno_not: String
  nno_in: [String!]
  nno_not_in: [String!]
  nno_lt: String
  nno_lte: String
  nno_gt: String
  nno_gte: String
  nno_contains: String
  nno_not_contains: String
  nno_starts_with: String
  nno_not_starts_with: String
  nno_ends_with: String
  nno_not_ends_with: String
  lib: String
  lib_not: String
  lib_in: [String!]
  lib_not_in: [String!]
  lib_lt: String
  lib_lte: String
  lib_gt: String
  lib_gte: String
  lib_contains: String
  lib_not_contains: String
  lib_starts_with: String
  lib_not_starts_with: String
  lib_ends_with: String
  lib_not_ends_with: String
  untcpt: Int
  untcpt_not: Int
  untcpt_in: [Int!]
  untcpt_not_in: [Int!]
  untcpt_lt: Int
  untcpt_lte: Int
  untcpt_gt: Int
  untcpt_gte: Int
  untprx: Float
  untprx_not: Float
  untprx_in: [Float!]
  untprx_not_in: [Float!]
  untprx_lt: Float
  untprx_lte: Float
  untprx_gt: Float
  untprx_gte: Float
  cdeapr: String
  cdeapr_not: String
  cdeapr_in: [String!]
  cdeapr_not_in: [String!]
  cdeapr_lt: String
  cdeapr_lte: String
  cdeapr_gt: String
  cdeapr_gte: String
  cdeapr_contains: String
  cdeapr_not_contains: String
  cdeapr_starts_with: String
  cdeapr_not_starts_with: String
  cdeapr_ends_with: String
  cdeapr_not_ends_with: String
  srvpou: String
  srvpou_not: String
  srvpou_in: [String!]
  srvpou_not_in: [String!]
  srvpou_lt: String
  srvpou_lte: String
  srvpou_gt: String
  srvpou_gte: String
  srvpou_contains: String
  srvpou_not_contains: String
  srvpou_starts_with: String
  srvpou_not_starts_with: String
  srvpou_ends_with: String
  srvpou_not_ends_with: String
  typart: String
  typart_not: String
  typart_in: [String!]
  typart_not_in: [String!]
  typart_lt: String
  typart_lte: String
  typart_gt: String
  typart_gte: String
  typart_contains: String
  typart_not_contains: String
  typart_starts_with: String
  typart_not_starts_with: String
  typart_ends_with: String
  typart_not_ends_with: String
  numser: String
  numser_not: String
  numser_in: [String!]
  numser_not_in: [String!]
  numser_lt: String
  numser_lte: String
  numser_gt: String
  numser_gte: String
  numser_contains: String
  numser_not_contains: String
  numser_starts_with: String
  numser_not_starts_with: String
  numser_ends_with: String
  numser_not_ends_with: String
  pictureUrl: String
  pictureUrl_not: String
  pictureUrl_in: [String!]
  pictureUrl_not_in: [String!]
  pictureUrl_lt: String
  pictureUrl_lte: String
  pictureUrl_gt: String
  pictureUrl_gte: String
  pictureUrl_contains: String
  pictureUrl_not_contains: String
  pictureUrl_starts_with: String
  pictureUrl_not_starts_with: String
  pictureUrl_ends_with: String
  pictureUrl_not_ends_with: String
  detention: DetentionWhereInput
  AND: [ArticleWhereInput!]
}

input ArticleWhereUniqueInput {
  id: ID
  numref: String
}

type BatchPayload {
  count: Long!
}

scalar DateTime

type Detention {
  id: ID!
  lib: String!
  unite: Unite!
  inventaire(where: InventaireWhereInput, orderBy: InventaireOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Inventaire!]
}

type DetentionConnection {
  pageInfo: PageInfo!
  edges: [DetentionEdge]!
  aggregate: AggregateDetention!
}

input DetentionCreateInput {
  id: ID
  lib: String!
  unite: UniteCreateOneWithoutDetentionsInput!
  inventaire: InventaireCreateManyWithoutDetentionInput
}

input DetentionCreateManyWithoutUniteInput {
  create: [DetentionCreateWithoutUniteInput!]
  connect: [DetentionWhereUniqueInput!]
}

input DetentionCreateOneInput {
  create: DetentionCreateInput
  connect: DetentionWhereUniqueInput
}

input DetentionCreateOneWithoutInventaireInput {
  create: DetentionCreateWithoutInventaireInput
  connect: DetentionWhereUniqueInput
}

input DetentionCreateWithoutInventaireInput {
  id: ID
  lib: String!
  unite: UniteCreateOneWithoutDetentionsInput!
}

input DetentionCreateWithoutUniteInput {
  id: ID
  lib: String!
  inventaire: InventaireCreateManyWithoutDetentionInput
}

type DetentionEdge {
  node: Detention!
  cursor: String!
}

enum DetentionOrderByInput {
  id_ASC
  id_DESC
  lib_ASC
  lib_DESC
}

type DetentionPreviousValues {
  id: ID!
  lib: String!
}

input DetentionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  lib: String
  lib_not: String
  lib_in: [String!]
  lib_not_in: [String!]
  lib_lt: String
  lib_lte: String
  lib_gt: String
  lib_gte: String
  lib_contains: String
  lib_not_contains: String
  lib_starts_with: String
  lib_not_starts_with: String
  lib_ends_with: String
  lib_not_ends_with: String
  AND: [DetentionScalarWhereInput!]
  OR: [DetentionScalarWhereInput!]
  NOT: [DetentionScalarWhereInput!]
}

type DetentionSubscriptionPayload {
  mutation: MutationType!
  node: Detention
  updatedFields: [String!]
  previousValues: DetentionPreviousValues
}

input DetentionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DetentionWhereInput
  AND: [DetentionSubscriptionWhereInput!]
}

input DetentionUpdateDataInput {
  lib: String
  unite: UniteUpdateOneRequiredWithoutDetentionsInput
  inventaire: InventaireUpdateManyWithoutDetentionInput
}

input DetentionUpdateInput {
  lib: String
  unite: UniteUpdateOneRequiredWithoutDetentionsInput
  inventaire: InventaireUpdateManyWithoutDetentionInput
}

input DetentionUpdateManyDataInput {
  lib: String
}

input DetentionUpdateManyMutationInput {
  lib: String
}

input DetentionUpdateManyWithoutUniteInput {
  create: [DetentionCreateWithoutUniteInput!]
  delete: [DetentionWhereUniqueInput!]
  connect: [DetentionWhereUniqueInput!]
  set: [DetentionWhereUniqueInput!]
  disconnect: [DetentionWhereUniqueInput!]
  update: [DetentionUpdateWithWhereUniqueWithoutUniteInput!]
  upsert: [DetentionUpsertWithWhereUniqueWithoutUniteInput!]
  deleteMany: [DetentionScalarWhereInput!]
  updateMany: [DetentionUpdateManyWithWhereNestedInput!]
}

input DetentionUpdateManyWithWhereNestedInput {
  where: DetentionScalarWhereInput!
  data: DetentionUpdateManyDataInput!
}

input DetentionUpdateOneInput {
  create: DetentionCreateInput
  update: DetentionUpdateDataInput
  upsert: DetentionUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: DetentionWhereUniqueInput
}

input DetentionUpdateOneWithoutInventaireInput {
  create: DetentionCreateWithoutInventaireInput
  update: DetentionUpdateWithoutInventaireDataInput
  upsert: DetentionUpsertWithoutInventaireInput
  delete: Boolean
  disconnect: Boolean
  connect: DetentionWhereUniqueInput
}

input DetentionUpdateWithoutInventaireDataInput {
  lib: String
  unite: UniteUpdateOneRequiredWithoutDetentionsInput
}

input DetentionUpdateWithoutUniteDataInput {
  lib: String
  inventaire: InventaireUpdateManyWithoutDetentionInput
}

input DetentionUpdateWithWhereUniqueWithoutUniteInput {
  where: DetentionWhereUniqueInput!
  data: DetentionUpdateWithoutUniteDataInput!
}

input DetentionUpsertNestedInput {
  update: DetentionUpdateDataInput!
  create: DetentionCreateInput!
}

input DetentionUpsertWithoutInventaireInput {
  update: DetentionUpdateWithoutInventaireDataInput!
  create: DetentionCreateWithoutInventaireInput!
}

input DetentionUpsertWithWhereUniqueWithoutUniteInput {
  where: DetentionWhereUniqueInput!
  update: DetentionUpdateWithoutUniteDataInput!
  create: DetentionCreateWithoutUniteInput!
}

input DetentionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  lib: String
  lib_not: String
  lib_in: [String!]
  lib_not_in: [String!]
  lib_lt: String
  lib_lte: String
  lib_gt: String
  lib_gte: String
  lib_contains: String
  lib_not_contains: String
  lib_starts_with: String
  lib_not_starts_with: String
  lib_ends_with: String
  lib_not_ends_with: String
  unite: UniteWhereInput
  inventaire_some: InventaireWhereInput
  AND: [DetentionWhereInput!]
}

input DetentionWhereUniqueInput {
  id: ID
}

type Inventaire {
  id: ID!
  lib: String!
  dtever: DateTime
  exideb: String
  dtecre: DateTime
  cdevrf: String
  obs: String
  articles: [ArticleEmbedded!]
  detention: Detention
}

type InventaireConnection {
  pageInfo: PageInfo!
  edges: [InventaireEdge]!
  aggregate: AggregateInventaire!
}

input InventaireCreateInput {
  id: ID
  lib: String!
  dtever: DateTime
  exideb: String
  cdevrf: String
  obs: String
  articles: ArticleEmbeddedCreateManyInput
  detention: DetentionCreateOneWithoutInventaireInput
}

input InventaireCreateManyWithoutDetentionInput {
  create: [InventaireCreateWithoutDetentionInput!]
  connect: [InventaireWhereUniqueInput!]
}

input InventaireCreateWithoutDetentionInput {
  id: ID
  lib: String!
  dtever: DateTime
  exideb: String
  cdevrf: String
  obs: String
  articles: ArticleEmbeddedCreateManyInput
}

type InventaireEdge {
  node: Inventaire!
  cursor: String!
}

enum InventaireOrderByInput {
  id_ASC
  id_DESC
  lib_ASC
  lib_DESC
  dtever_ASC
  dtever_DESC
  exideb_ASC
  exideb_DESC
  dtecre_ASC
  dtecre_DESC
  cdevrf_ASC
  cdevrf_DESC
  obs_ASC
  obs_DESC
}

type InventairePreviousValues {
  id: ID!
  lib: String!
  dtever: DateTime
  exideb: String
  dtecre: DateTime
  cdevrf: String
  obs: String
}

input InventaireScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  lib: String
  lib_not: String
  lib_in: [String!]
  lib_not_in: [String!]
  lib_lt: String
  lib_lte: String
  lib_gt: String
  lib_gte: String
  lib_contains: String
  lib_not_contains: String
  lib_starts_with: String
  lib_not_starts_with: String
  lib_ends_with: String
  lib_not_ends_with: String
  dtever: DateTime
  dtever_not: DateTime
  dtever_in: [DateTime!]
  dtever_not_in: [DateTime!]
  dtever_lt: DateTime
  dtever_lte: DateTime
  dtever_gt: DateTime
  dtever_gte: DateTime
  exideb: String
  exideb_not: String
  exideb_in: [String!]
  exideb_not_in: [String!]
  exideb_lt: String
  exideb_lte: String
  exideb_gt: String
  exideb_gte: String
  exideb_contains: String
  exideb_not_contains: String
  exideb_starts_with: String
  exideb_not_starts_with: String
  exideb_ends_with: String
  exideb_not_ends_with: String
  dtecre: DateTime
  dtecre_not: DateTime
  dtecre_in: [DateTime!]
  dtecre_not_in: [DateTime!]
  dtecre_lt: DateTime
  dtecre_lte: DateTime
  dtecre_gt: DateTime
  dtecre_gte: DateTime
  cdevrf: String
  cdevrf_not: String
  cdevrf_in: [String!]
  cdevrf_not_in: [String!]
  cdevrf_lt: String
  cdevrf_lte: String
  cdevrf_gt: String
  cdevrf_gte: String
  cdevrf_contains: String
  cdevrf_not_contains: String
  cdevrf_starts_with: String
  cdevrf_not_starts_with: String
  cdevrf_ends_with: String
  cdevrf_not_ends_with: String
  obs: String
  obs_not: String
  obs_in: [String!]
  obs_not_in: [String!]
  obs_lt: String
  obs_lte: String
  obs_gt: String
  obs_gte: String
  obs_contains: String
  obs_not_contains: String
  obs_starts_with: String
  obs_not_starts_with: String
  obs_ends_with: String
  obs_not_ends_with: String
  AND: [InventaireScalarWhereInput!]
  OR: [InventaireScalarWhereInput!]
  NOT: [InventaireScalarWhereInput!]
}

type InventaireSubscriptionPayload {
  mutation: MutationType!
  node: Inventaire
  updatedFields: [String!]
  previousValues: InventairePreviousValues
}

input InventaireSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: InventaireWhereInput
  AND: [InventaireSubscriptionWhereInput!]
}

input InventaireUpdateInput {
  lib: String
  dtever: DateTime
  exideb: String
  cdevrf: String
  obs: String
  articles: ArticleEmbeddedUpdateManyInput
  detention: DetentionUpdateOneWithoutInventaireInput
}

input InventaireUpdateManyDataInput {
  lib: String
  dtever: DateTime
  exideb: String
  cdevrf: String
  obs: String
}

input InventaireUpdateManyMutationInput {
  lib: String
  dtever: DateTime
  exideb: String
  cdevrf: String
  obs: String
}

input InventaireUpdateManyWithoutDetentionInput {
  create: [InventaireCreateWithoutDetentionInput!]
  delete: [InventaireWhereUniqueInput!]
  connect: [InventaireWhereUniqueInput!]
  set: [InventaireWhereUniqueInput!]
  disconnect: [InventaireWhereUniqueInput!]
  update: [InventaireUpdateWithWhereUniqueWithoutDetentionInput!]
  upsert: [InventaireUpsertWithWhereUniqueWithoutDetentionInput!]
  deleteMany: [InventaireScalarWhereInput!]
  updateMany: [InventaireUpdateManyWithWhereNestedInput!]
}

input InventaireUpdateManyWithWhereNestedInput {
  where: InventaireScalarWhereInput!
  data: InventaireUpdateManyDataInput!
}

input InventaireUpdateWithoutDetentionDataInput {
  lib: String
  dtever: DateTime
  exideb: String
  cdevrf: String
  obs: String
  articles: ArticleEmbeddedUpdateManyInput
}

input InventaireUpdateWithWhereUniqueWithoutDetentionInput {
  where: InventaireWhereUniqueInput!
  data: InventaireUpdateWithoutDetentionDataInput!
}

input InventaireUpsertWithWhereUniqueWithoutDetentionInput {
  where: InventaireWhereUniqueInput!
  update: InventaireUpdateWithoutDetentionDataInput!
  create: InventaireCreateWithoutDetentionInput!
}

input InventaireWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  lib: String
  lib_not: String
  lib_in: [String!]
  lib_not_in: [String!]
  lib_lt: String
  lib_lte: String
  lib_gt: String
  lib_gte: String
  lib_contains: String
  lib_not_contains: String
  lib_starts_with: String
  lib_not_starts_with: String
  lib_ends_with: String
  lib_not_ends_with: String
  dtever: DateTime
  dtever_not: DateTime
  dtever_in: [DateTime!]
  dtever_not_in: [DateTime!]
  dtever_lt: DateTime
  dtever_lte: DateTime
  dtever_gt: DateTime
  dtever_gte: DateTime
  exideb: String
  exideb_not: String
  exideb_in: [String!]
  exideb_not_in: [String!]
  exideb_lt: String
  exideb_lte: String
  exideb_gt: String
  exideb_gte: String
  exideb_contains: String
  exideb_not_contains: String
  exideb_starts_with: String
  exideb_not_starts_with: String
  exideb_ends_with: String
  exideb_not_ends_with: String
  dtecre: DateTime
  dtecre_not: DateTime
  dtecre_in: [DateTime!]
  dtecre_not_in: [DateTime!]
  dtecre_lt: DateTime
  dtecre_lte: DateTime
  dtecre_gt: DateTime
  dtecre_gte: DateTime
  cdevrf: String
  cdevrf_not: String
  cdevrf_in: [String!]
  cdevrf_not_in: [String!]
  cdevrf_lt: String
  cdevrf_lte: String
  cdevrf_gt: String
  cdevrf_gte: String
  cdevrf_contains: String
  cdevrf_not_contains: String
  cdevrf_starts_with: String
  cdevrf_not_starts_with: String
  cdevrf_ends_with: String
  cdevrf_not_ends_with: String
  obs: String
  obs_not: String
  obs_in: [String!]
  obs_not_in: [String!]
  obs_lt: String
  obs_lte: String
  obs_gt: String
  obs_gte: String
  obs_contains: String
  obs_not_contains: String
  obs_starts_with: String
  obs_not_starts_with: String
  obs_ends_with: String
  obs_not_ends_with: String
  articles_some: ArticleEmbeddedWhereInput
  articles_every: ArticleEmbeddedRestrictedWhereInput
  articles_none: ArticleEmbeddedRestrictedWhereInput
  detention: DetentionWhereInput
  AND: [InventaireWhereInput!]
}

input InventaireWhereUniqueInput {
  id: ID
}

scalar Long

type Mutation {
  createArticle(data: ArticleCreateInput!): Article!
  updateArticle(data: ArticleUpdateInput!, where: ArticleWhereUniqueInput!): Article
  updateManyArticles(data: ArticleUpdateManyMutationInput!, where: ArticleWhereInput): BatchPayload!
  upsertArticle(where: ArticleWhereUniqueInput!, create: ArticleCreateInput!, update: ArticleUpdateInput!): Article!
  deleteArticle(where: ArticleWhereUniqueInput!): Article
  deleteManyArticles(where: ArticleWhereInput): BatchPayload!
  createDetention(data: DetentionCreateInput!): Detention!
  updateDetention(data: DetentionUpdateInput!, where: DetentionWhereUniqueInput!): Detention
  updateManyDetentions(data: DetentionUpdateManyMutationInput!, where: DetentionWhereInput): BatchPayload!
  upsertDetention(where: DetentionWhereUniqueInput!, create: DetentionCreateInput!, update: DetentionUpdateInput!): Detention!
  deleteDetention(where: DetentionWhereUniqueInput!): Detention
  deleteManyDetentions(where: DetentionWhereInput): BatchPayload!
  createInventaire(data: InventaireCreateInput!): Inventaire!
  updateInventaire(data: InventaireUpdateInput!, where: InventaireWhereUniqueInput!): Inventaire
  updateManyInventaires(data: InventaireUpdateManyMutationInput!, where: InventaireWhereInput): BatchPayload!
  upsertInventaire(where: InventaireWhereUniqueInput!, create: InventaireCreateInput!, update: InventaireUpdateInput!): Inventaire!
  deleteInventaire(where: InventaireWhereUniqueInput!): Inventaire
  deleteManyInventaires(where: InventaireWhereInput): BatchPayload!
  createUnite(data: UniteCreateInput!): Unite!
  updateUnite(data: UniteUpdateInput!, where: UniteWhereUniqueInput!): Unite
  updateManyUnites(data: UniteUpdateManyMutationInput!, where: UniteWhereInput): BatchPayload!
  upsertUnite(where: UniteWhereUniqueInput!, create: UniteCreateInput!, update: UniteUpdateInput!): Unite!
  deleteUnite(where: UniteWhereUniqueInput!): Unite
  deleteManyUnites(where: UniteWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  article(where: ArticleWhereUniqueInput!): Article
  articles(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Article]!
  articlesConnection(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ArticleConnection!
  detention(where: DetentionWhereUniqueInput!): Detention
  detentions(where: DetentionWhereInput, orderBy: DetentionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Detention]!
  detentionsConnection(where: DetentionWhereInput, orderBy: DetentionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DetentionConnection!
  inventaire(where: InventaireWhereUniqueInput!): Inventaire
  inventaires(where: InventaireWhereInput, orderBy: InventaireOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Inventaire]!
  inventairesConnection(where: InventaireWhereInput, orderBy: InventaireOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InventaireConnection!
  unite(where: UniteWhereUniqueInput!): Unite
  unites(where: UniteWhereInput, orderBy: UniteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Unite]!
  unitesConnection(where: UniteWhereInput, orderBy: UniteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UniteConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Subscription {
  article(where: ArticleSubscriptionWhereInput): ArticleSubscriptionPayload
  detention(where: DetentionSubscriptionWhereInput): DetentionSubscriptionPayload
  inventaire(where: InventaireSubscriptionWhereInput): InventaireSubscriptionPayload
  unite(where: UniteSubscriptionWhereInput): UniteSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type Unite {
  id: ID!
  cdeunt: String!
  dtepjc: DateTime
  libunt: String!
  typuni: String
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  detentions(where: DetentionWhereInput, orderBy: DetentionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Detention!]
}

type UniteConnection {
  pageInfo: PageInfo!
  edges: [UniteEdge]!
  aggregate: AggregateUnite!
}

input UniteCreateInput {
  id: ID
  cdeunt: String!
  dtepjc: DateTime
  libunt: String!
  typuni: String
  users: UserCreateManyWithoutUnitesInput
  detentions: DetentionCreateManyWithoutUniteInput
}

input UniteCreateManyWithoutUsersInput {
  create: [UniteCreateWithoutUsersInput!]
  connect: [UniteWhereUniqueInput!]
}

input UniteCreateOneWithoutDetentionsInput {
  create: UniteCreateWithoutDetentionsInput
  connect: UniteWhereUniqueInput
}

input UniteCreateWithoutDetentionsInput {
  id: ID
  cdeunt: String!
  dtepjc: DateTime
  libunt: String!
  typuni: String
  users: UserCreateManyWithoutUnitesInput
}

input UniteCreateWithoutUsersInput {
  id: ID
  cdeunt: String!
  dtepjc: DateTime
  libunt: String!
  typuni: String
  detentions: DetentionCreateManyWithoutUniteInput
}

type UniteEdge {
  node: Unite!
  cursor: String!
}

enum UniteOrderByInput {
  id_ASC
  id_DESC
  cdeunt_ASC
  cdeunt_DESC
  dtepjc_ASC
  dtepjc_DESC
  libunt_ASC
  libunt_DESC
  typuni_ASC
  typuni_DESC
}

type UnitePreviousValues {
  id: ID!
  cdeunt: String!
  dtepjc: DateTime
  libunt: String!
  typuni: String
}

input UniteScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  cdeunt: String
  cdeunt_not: String
  cdeunt_in: [String!]
  cdeunt_not_in: [String!]
  cdeunt_lt: String
  cdeunt_lte: String
  cdeunt_gt: String
  cdeunt_gte: String
  cdeunt_contains: String
  cdeunt_not_contains: String
  cdeunt_starts_with: String
  cdeunt_not_starts_with: String
  cdeunt_ends_with: String
  cdeunt_not_ends_with: String
  dtepjc: DateTime
  dtepjc_not: DateTime
  dtepjc_in: [DateTime!]
  dtepjc_not_in: [DateTime!]
  dtepjc_lt: DateTime
  dtepjc_lte: DateTime
  dtepjc_gt: DateTime
  dtepjc_gte: DateTime
  libunt: String
  libunt_not: String
  libunt_in: [String!]
  libunt_not_in: [String!]
  libunt_lt: String
  libunt_lte: String
  libunt_gt: String
  libunt_gte: String
  libunt_contains: String
  libunt_not_contains: String
  libunt_starts_with: String
  libunt_not_starts_with: String
  libunt_ends_with: String
  libunt_not_ends_with: String
  typuni: String
  typuni_not: String
  typuni_in: [String!]
  typuni_not_in: [String!]
  typuni_lt: String
  typuni_lte: String
  typuni_gt: String
  typuni_gte: String
  typuni_contains: String
  typuni_not_contains: String
  typuni_starts_with: String
  typuni_not_starts_with: String
  typuni_ends_with: String
  typuni_not_ends_with: String
  AND: [UniteScalarWhereInput!]
  OR: [UniteScalarWhereInput!]
  NOT: [UniteScalarWhereInput!]
}

type UniteSubscriptionPayload {
  mutation: MutationType!
  node: Unite
  updatedFields: [String!]
  previousValues: UnitePreviousValues
}

input UniteSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UniteWhereInput
  AND: [UniteSubscriptionWhereInput!]
}

input UniteUpdateInput {
  cdeunt: String
  dtepjc: DateTime
  libunt: String
  typuni: String
  users: UserUpdateManyWithoutUnitesInput
  detentions: DetentionUpdateManyWithoutUniteInput
}

input UniteUpdateManyDataInput {
  cdeunt: String
  dtepjc: DateTime
  libunt: String
  typuni: String
}

input UniteUpdateManyMutationInput {
  cdeunt: String
  dtepjc: DateTime
  libunt: String
  typuni: String
}

input UniteUpdateManyWithoutUsersInput {
  create: [UniteCreateWithoutUsersInput!]
  delete: [UniteWhereUniqueInput!]
  connect: [UniteWhereUniqueInput!]
  set: [UniteWhereUniqueInput!]
  disconnect: [UniteWhereUniqueInput!]
  update: [UniteUpdateWithWhereUniqueWithoutUsersInput!]
  upsert: [UniteUpsertWithWhereUniqueWithoutUsersInput!]
  deleteMany: [UniteScalarWhereInput!]
  updateMany: [UniteUpdateManyWithWhereNestedInput!]
}

input UniteUpdateManyWithWhereNestedInput {
  where: UniteScalarWhereInput!
  data: UniteUpdateManyDataInput!
}

input UniteUpdateOneRequiredWithoutDetentionsInput {
  create: UniteCreateWithoutDetentionsInput
  update: UniteUpdateWithoutDetentionsDataInput
  upsert: UniteUpsertWithoutDetentionsInput
  connect: UniteWhereUniqueInput
}

input UniteUpdateWithoutDetentionsDataInput {
  cdeunt: String
  dtepjc: DateTime
  libunt: String
  typuni: String
  users: UserUpdateManyWithoutUnitesInput
}

input UniteUpdateWithoutUsersDataInput {
  cdeunt: String
  dtepjc: DateTime
  libunt: String
  typuni: String
  detentions: DetentionUpdateManyWithoutUniteInput
}

input UniteUpdateWithWhereUniqueWithoutUsersInput {
  where: UniteWhereUniqueInput!
  data: UniteUpdateWithoutUsersDataInput!
}

input UniteUpsertWithoutDetentionsInput {
  update: UniteUpdateWithoutDetentionsDataInput!
  create: UniteCreateWithoutDetentionsInput!
}

input UniteUpsertWithWhereUniqueWithoutUsersInput {
  where: UniteWhereUniqueInput!
  update: UniteUpdateWithoutUsersDataInput!
  create: UniteCreateWithoutUsersInput!
}

input UniteWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  cdeunt: String
  cdeunt_not: String
  cdeunt_in: [String!]
  cdeunt_not_in: [String!]
  cdeunt_lt: String
  cdeunt_lte: String
  cdeunt_gt: String
  cdeunt_gte: String
  cdeunt_contains: String
  cdeunt_not_contains: String
  cdeunt_starts_with: String
  cdeunt_not_starts_with: String
  cdeunt_ends_with: String
  cdeunt_not_ends_with: String
  dtepjc: DateTime
  dtepjc_not: DateTime
  dtepjc_in: [DateTime!]
  dtepjc_not_in: [DateTime!]
  dtepjc_lt: DateTime
  dtepjc_lte: DateTime
  dtepjc_gt: DateTime
  dtepjc_gte: DateTime
  libunt: String
  libunt_not: String
  libunt_in: [String!]
  libunt_not_in: [String!]
  libunt_lt: String
  libunt_lte: String
  libunt_gt: String
  libunt_gte: String
  libunt_contains: String
  libunt_not_contains: String
  libunt_starts_with: String
  libunt_not_starts_with: String
  libunt_ends_with: String
  libunt_not_ends_with: String
  typuni: String
  typuni_not: String
  typuni_in: [String!]
  typuni_not_in: [String!]
  typuni_lt: String
  typuni_lte: String
  typuni_gt: String
  typuni_gte: String
  typuni_contains: String
  typuni_not_contains: String
  typuni_starts_with: String
  typuni_not_starts_with: String
  typuni_ends_with: String
  typuni_not_ends_with: String
  users_some: UserWhereInput
  detentions_some: DetentionWhereInput
  AND: [UniteWhereInput!]
}

input UniteWhereUniqueInput {
  id: ID
}

type User {
  id: ID!
  dtecre: DateTime
  identifiant: String!
  password: String!
  nom: String
  prenom: String
  role: UserRole
  unites(where: UniteWhereInput, orderBy: UniteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Unite!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  identifiant: String!
  password: String!
  nom: String
  prenom: String
  role: UserRole
  unites: UniteCreateManyWithoutUsersInput
}

input UserCreateManyWithoutUnitesInput {
  create: [UserCreateWithoutUnitesInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateWithoutUnitesInput {
  id: ID
  identifiant: String!
  password: String!
  nom: String
  prenom: String
  role: UserRole
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  dtecre_ASC
  dtecre_DESC
  identifiant_ASC
  identifiant_DESC
  password_ASC
  password_DESC
  nom_ASC
  nom_DESC
  prenom_ASC
  prenom_DESC
  role_ASC
  role_DESC
}

type UserPreviousValues {
  id: ID!
  dtecre: DateTime
  identifiant: String!
  password: String!
  nom: String
  prenom: String
  role: UserRole
}

enum UserRole {
  UTI
  DET
}

input UserScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  dtecre: DateTime
  dtecre_not: DateTime
  dtecre_in: [DateTime!]
  dtecre_not_in: [DateTime!]
  dtecre_lt: DateTime
  dtecre_lte: DateTime
  dtecre_gt: DateTime
  dtecre_gte: DateTime
  identifiant: String
  identifiant_not: String
  identifiant_in: [String!]
  identifiant_not_in: [String!]
  identifiant_lt: String
  identifiant_lte: String
  identifiant_gt: String
  identifiant_gte: String
  identifiant_contains: String
  identifiant_not_contains: String
  identifiant_starts_with: String
  identifiant_not_starts_with: String
  identifiant_ends_with: String
  identifiant_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  nom: String
  nom_not: String
  nom_in: [String!]
  nom_not_in: [String!]
  nom_lt: String
  nom_lte: String
  nom_gt: String
  nom_gte: String
  nom_contains: String
  nom_not_contains: String
  nom_starts_with: String
  nom_not_starts_with: String
  nom_ends_with: String
  nom_not_ends_with: String
  prenom: String
  prenom_not: String
  prenom_in: [String!]
  prenom_not_in: [String!]
  prenom_lt: String
  prenom_lte: String
  prenom_gt: String
  prenom_gte: String
  prenom_contains: String
  prenom_not_contains: String
  prenom_starts_with: String
  prenom_not_starts_with: String
  prenom_ends_with: String
  prenom_not_ends_with: String
  role: UserRole
  role_not: UserRole
  role_in: [UserRole!]
  role_not_in: [UserRole!]
  AND: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  identifiant: String
  password: String
  nom: String
  prenom: String
  role: UserRole
  unites: UniteUpdateManyWithoutUsersInput
}

input UserUpdateManyDataInput {
  identifiant: String
  password: String
  nom: String
  prenom: String
  role: UserRole
}

input UserUpdateManyMutationInput {
  identifiant: String
  password: String
  nom: String
  prenom: String
  role: UserRole
}

input UserUpdateManyWithoutUnitesInput {
  create: [UserCreateWithoutUnitesInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutUnitesInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutUnitesInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateWithoutUnitesDataInput {
  identifiant: String
  password: String
  nom: String
  prenom: String
  role: UserRole
}

input UserUpdateWithWhereUniqueWithoutUnitesInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutUnitesDataInput!
}

input UserUpsertWithWhereUniqueWithoutUnitesInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutUnitesDataInput!
  create: UserCreateWithoutUnitesInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  dtecre: DateTime
  dtecre_not: DateTime
  dtecre_in: [DateTime!]
  dtecre_not_in: [DateTime!]
  dtecre_lt: DateTime
  dtecre_lte: DateTime
  dtecre_gt: DateTime
  dtecre_gte: DateTime
  identifiant: String
  identifiant_not: String
  identifiant_in: [String!]
  identifiant_not_in: [String!]
  identifiant_lt: String
  identifiant_lte: String
  identifiant_gt: String
  identifiant_gte: String
  identifiant_contains: String
  identifiant_not_contains: String
  identifiant_starts_with: String
  identifiant_not_starts_with: String
  identifiant_ends_with: String
  identifiant_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  nom: String
  nom_not: String
  nom_in: [String!]
  nom_not_in: [String!]
  nom_lt: String
  nom_lte: String
  nom_gt: String
  nom_gte: String
  nom_contains: String
  nom_not_contains: String
  nom_starts_with: String
  nom_not_starts_with: String
  nom_ends_with: String
  nom_not_ends_with: String
  prenom: String
  prenom_not: String
  prenom_in: [String!]
  prenom_not_in: [String!]
  prenom_lt: String
  prenom_lte: String
  prenom_gt: String
  prenom_gte: String
  prenom_contains: String
  prenom_not_contains: String
  prenom_starts_with: String
  prenom_not_starts_with: String
  prenom_ends_with: String
  prenom_not_ends_with: String
  role: UserRole
  role_not: UserRole
  role_in: [UserRole!]
  role_not_in: [UserRole!]
  unites_some: UniteWhereInput
  AND: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  identifiant: String
}
`